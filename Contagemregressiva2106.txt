<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" type="text/css" href="src/assets/css/sovai.css">
    <script type="text/javascript" src="src/js/sovai.js" defer></script>
    <title>Contador Regressivo para Férias</title>
</head>
<body onmouseover="execSom()">
    <div class="video-background">
        <video autoplay muted loop id="bg-video">
            <source src="src/assets/images/MonkeyWorking.mp4" type="video/mp4">
        </video>
    </div> 
    <h1 id="title">Tempo que falta para as férias do Márcio:</h1>  
    <div class="container">
        <div id="countdown">
            <div>
                <span id="days">0</span>
                <p>Days</p>
            </div>
            <div>
                <span id="hours">0</span>
                <p>Hours</p>
            </div>
            <div>
                <span id="minutes">0</span>
                <p>Minutes</p>
            </div>
            <div>
                <span id="seconds">0</span>
                <p>Seconds</p>
            </div>
        </div>
        <h2>Caso deseje cancelar, clique no botão abaixo</h2>
        <button id="cancel-button">Cancelar</button>
        <h5>(Pense bem para não se arrepender!)</h5>
    </div> 
    <audio style="visibility:hidden" autoplay loop id='playaudio'>
        <source src="/src/assets/sounds/RequiemForDream.mp3" type="audio/mp3"/>
    </audio>  
</body>
</html>

CSS

body, html {
    height: 100%;
    margin: 0;
    font-family: Arial, sans-serif;
    display: flex;
    justify-content: center;
    align-items: center;
    color: white;
    position: relative;
    overflow: hidden;
}

.video-background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    overflow: hidden;
}

#bg-video {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

#title {
    position: fixed;
    top: 3px;
    width: 100%;
    text-align: center;
    animation: color-change 1s infinite;
}

.container {
    margin-top: 100px;
    text-align: center;
    z-index: 1;
}

#countdown {
    display: flex;
    justify-content: center;
    gap: 20px;
    margin-top: 20px;
}

#countdown div {
    background: #444;
    padding: 20px;
    border-radius: 10px;
    text-align: center;
}

#countdown span {
    display: block;
    font-size: 2em;
}

#countdown p {
    margin: 0;
}

h1 {
    margin-top: 100px;
    position: relative;
    animation: color-change 1s infinite;
}

h2 {
    margin-top: 50px;
    font-size: 1.3em;
    color: rgb(228, 23, 33);
    animation: pulse 2s infinite;
    display: inline-block;
    background: rgba(0, 0, 0, 0.5); /* background semi-transparente */
    padding: 10px; /* padding para evitar corte das bordas */
    border-radius: 10px; /* bordas arredondadas */
}

#cancel-button {
    margin-top: 20px; /* Margem para separar do h2 */
    padding: 15px;
    font-size: 1em;
    color: white;
    background-color: red;
    border: none;
    border-radius: 50%; /* botão redondo */
    cursor: pointer;
    transition: transform 0.3s ease;
}

#cancel-button:hover {
    transform: scale(1.3);
}

h5{
    margin-top: 20px;
    color: rgb(242, 241, 247);
}

@keyframes pulse {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.1);
    }
    100% {
        transform: scale(1);
    }
}

@keyframes color-change {
    0% {
        color: red;
    }
    25% {
        color: blue;
    }
    50% {
        color: green;
    }
    75% {
        color: yellow;
    }
    100% {
        color: red;
    }
}

JS
document.addEventListener('DOMContentLoaded', () => {
    // Defina a data de destino aqui
    const targetDate = new Date('July 1, 2024 00:00:00').getTime();

    // Atualize o contador a cada segundo
    const countdown = setInterval(() => {
        const now = new Date().getTime();

        // Calcular a diferença entre a data atual e a data de destino
        const difference = targetDate - now;

        // Calcular o tempo restante em dias, horas, minutos e segundos
        const days = Math.floor(difference / (1000 * 60 * 60 * 24));
        const hours = Math.floor((difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        const minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));
        const seconds = Math.floor((difference % (1000 * 60)) / 1000);

        // Exibir o resultado
        document.getElementById('days').innerText = days;
        document.getElementById('hours').innerText = hours;
        document.getElementById('minutes').innerText = minutes;
        document.getElementById('seconds').innerText = seconds;

        // Se o contador terminar, mostrar uma mensagem
        if (difference < 0) {
            clearInterval(countdown);
            document.getElementById('countdown').innerHTML = '<h2>Férias!</h2>';
        }
    }, 1000);
});

// Função para tocar som ao mover o mouse em SayYes
function execSom() {
    var playAudio = document.getElementById("playaudio");
    if (playAudio) {
      playAudio.play().catch(error => {
        console.error("Erro ao tentar tocar o áudio:", error);
      });
    }
}

// Função para mudar a cor dos caracteres
function changeColorRandomly() {
    const h1 = document.querySelector('h1');
    if (h1) {
        h1.innerHTML = h1.textContent.split('').map(char => {
            const color = `hsl(${Math.random() * 360}, 100%, 50%)`;
            return `<span style="color:${color}">${char}</span>`;
        }).join('');
    }
}

// Change color every 500 milliseconds
setInterval(changeColorRandomly, 500);

document.getElementById('cancel-button').addEventListener('click', () => {
    // Parar o áudio
    var playAudio = document.getElementById("playaudio");
    if (playAudio) {
        playAudio.pause();
    }

    // Redirecionar para a nova página
    window.location.href = "video_page.html";
});


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Vídeo</title>
    <style>
        body, html {
            height: 100%;
            margin: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            background-color: black;
        }

        .video-container {
            width: 80%;
            height: 80%;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .video-container video {
            width: 100%;
            height: 100%;
        }
    </style>
</head>
<body>
    <div class="video-container">
        <video controls>
            <source src="src/assets/images/YourVideo.mp4" type="video/mp4">
        </video>
    </div>
</body>
</html>

JS (sovai.js):
Adicionada a função de manipulação do evento de


